name: Acceptance tests
on:
  - push
  - pull_request

jobs:

  build:
    if: "${{'PROCESS : Commit Green IT Analysis HTML file output to be previewed' != github.event.head_commit.message}}"
    uses: ./.github/workflows/build.yml

  test:
    if: "${{'PROCESS : Commit Green IT Analysis HTML file output to be previewed' != github.event.head_commit.message}}"
    runs-on: ubuntu-latest
    steps:
      - name: Download sources
        uses: actions/checkout@v3
      - name: Download tools
        run: |
          sudo apt install bc
          cd backend
          docker compose pull
          docker pull benel/cucumber-capybara
          curl https://assets.greenframe.io/install.sh | bash
      - name: Install and launch backend with test data
        run: |
          cd backend
          export COUCHDB_USER="TO_BE_CHANGED"
          export COUCHDB_PASSWORD="TO_BE_CHANGED"
          docker compose up -d
      - name: Wait for backend
        uses: docker://benel/wait-for-response:1
        with:
          args: http://localhost:5984/hyperglosae 401 5000 500
      - name: Enable CORS and public access in backend
        run: |
          export COUCHDB_USER="TO_BE_CHANGED"
          export COUCHDB_PASSWORD="TO_BE_CHANGED"
          curl -X PUT -u "${COUCHDB_USER}:${COUCHDB_PASSWORD}" -s localhost:5984/_node/nonode@nohost/_config/httpd/enable_cors --data '"true"'
          curl -X PUT -u "${COUCHDB_USER}:${COUCHDB_PASSWORD}" -s localhost:5984/_node/nonode@nohost/_config/cors/origins --data '"*"'
          curl -X PUT -u "${COUCHDB_USER}:${COUCHDB_PASSWORD}" -s localhost:5984/hyperglosae/_security --data '{"members":{"roles":[]},"admins":{"roles":["_admin"]}}'
      - name: Wait for frontend build
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          check-name: build / build
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/build
      - name: Start frontend
        run: |
          cd frontend
          npm run preprod &
      - name: Wait for frontend
        uses: docker://benel/wait-for-response:1
        with:
          args: http://localhost:3000/ 200 30000 500
      - name: Run tests
        run:
          docker run --rm -v "$(pwd)":/app --tty --net="host" --env APP_HOST="http://`hostname`:3000" benel/cucumber-capybara --retry 2 --fail-fast --no-source --no-snippets
        shell: 'script -q -e -c "bash {0}"'
      - name: Run eco-design test
        run: |
          cd tests
          bash greenframeThreshold.sh
          cd /home/runner/work/
          mkdir output
          chmod -R a+rwX /home/runner/work/output/
          cd /home/runner/work/HyperGlosae/HyperGlosae/tests/greenIT/
          sudo docker run -t --init --rm --cap-add=SYS_ADMIN --network="host" -v /home/runner/work/HyperGlosae/HyperGlosae/tests/greenIT/input:/app/input -v /home/runner/work/output:/app/output  --name green-it-test vallhallalm/green_it_cli:v1 greenit analyse /app/input/url.yaml /app/output/global.html --format=html
        env: 
          GREENFRAME_SECRET_TOKEN: ${{ secrets.GREENFRAME_SECRET_TOKEN }}
      - name: save output from greenIT as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: green-it-report
          path: /home/runner/work/output
          retention-days: 5

  exposeTest:
    if: "${{'PROCESS : Commit Green IT Analysis HTML file output to be previewed' != github.event.head_commit.message}}"
    needs: test
    uses: ./.github/workflows/exposeTests.yml